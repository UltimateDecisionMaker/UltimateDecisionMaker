# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.7
        environment:
            PGHOST: 127.0.0.1
            PGUSER: postgresql
            EC2_INSTANCE: ec2-34-220-109-173.us-west-2.compute.amazonaws.com
            EC2_USER: ubuntu

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:10.5
        environment:
            POSTGRES_USER: postgresql
            POSTGRES_DB: TEST_DATABASE_URL

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: create database
          command: |
            sudo apt install -y postgresql-client
            createdb -h localhost test_ultimate_decision_maker -O postgresql

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest -v

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - add_ssh_keys:
          fingerprints:
            - "SHA256:plFVCkNFJBO4L8n/D/OWi4oytvfHTbDVXL51zOxbsa4"
      - run:
          name: Deploy Over SSH
          command: |
            ssh $EC2_USER@$EC2_INSTANCE "echo 'i made it!!'"

